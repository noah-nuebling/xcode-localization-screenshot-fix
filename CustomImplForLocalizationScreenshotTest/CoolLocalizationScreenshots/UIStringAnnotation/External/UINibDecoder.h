/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, November 15, 2023 at 5:37:57 PM Eastern European Standard Time
* Operating System: Version 17.1 (Build 21B74)
* Image Source: /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation
* classdump-dyld is licensed under GPLv3, Copyright © 2013-2016 by Elias Limneos.
*/

#import "UIFoundation-Structs.h" //#import <UIFoundation/UIFoundation-Structs.h>
#import <Foundation/NSCoder.h>

@class UINibStringIDTable;

@interface UINibDecoder : NSCoder {

    Class arrayClass;
    Class setClass;
    Class dictionaryClass;
    Class* classes;
    id __strong *missingClasses;
    id /*UINibDecoderObjectEntry**/ objects;
    UINibDecoderValue* values;
    char* valueTypes;
    void* valueData;
    unsigned long long valueDataSize;
    UINibDecoderHeader header;
    id __strong *objectsByObjectID;
    unsigned* longObjectClassIDs;
    char* shortObjectClassIDs;
    unsigned* keyMasks;
    long long inlinedValueKey;
    UINibDecoderRecursiveState recursiveState;
    id/*UINibStringIDTable**/ keyIDTable;
    id delegate;
    id/*UIKeyToKeyIDCache**/ keyIDCache;
    id /*UIKeyAndScopeToValueCache**/ valueCache;
    long long lookupRounds;
    long long maxPossibleLookupRounds;
    long long failedByKeyMask;
    long long savedByKeyMask;
}
@property (assign) id delegate;
@property (nonatomic,readonly) long long uniqueIDForCurrentlyDecodingObject;
@property (getter=isReusable,nonatomic,readonly) BOOL reusable;

+(id)unarchiveObjectWithData:(id)arg1 ;
+(id)unarchiveObjectWithFile:(id)arg1 ;

/// ---

-(long long)decodeIntegerForKey:(id)arg1 ;
-(double)decodeDoubleForKey:(id)arg1 ;
-(BOOL)decodeBoolForKey:(id)arg1 ;
-(long long)decodeInt64ForKey:(id)arg1 ;
-(float)decodeFloatForKey:(id)arg1 ;
-(int)decodeIntForKey:(id)arg1 ;
-(int)decodeInt32ForKey:(id)arg1 ;

-(CGSize)decodeCGSizeForKey:(id)arg1 ;
-(CGRect)decodeCGRectForKey:(id)arg1 ;
-(CGPoint)decodeCGPointForKey:(id)arg1 ;
-(CGAffineTransform)decodeCGAffineTransformForKey:(id)arg1 ;
-(/*UIEdgeInsets*/NSEdgeInsets)decodeUIEdgeInsetsForKey:(id)arg1;

-(const char*)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long*)arg2 ;

-(BOOL)decodeArrayOfCGFloats:(double*)arg1 count:(long long)arg2 forKey:(id)arg3 ;
-(BOOL)decodeArrayOfDoubles:(double*)arg1 count:(long long)arg2 forKey:(id)arg3 ;
-(BOOL)decodeArrayOfFloats:(float*)arg1 count:(long long)arg2 forKey:(id)arg3 ;

-(id)decodeObjectForKey:(id)arg1 ;

/// ---

-(void*)decodeBytesWithReturnedLength:(unsigned long long*)arg1 ;

-(id)decodePropertyList;

-(void)decodeValueOfObjCType:(const char*)arg1 at:(void*)arg2 ;
-(void)decodeArrayOfObjCType:(const char*)arg1 count:(unsigned long long)arg2 at:(void*)arg3 ;
-(void)decodeValuesOfObjCTypes:(const char*)arg1 ;

-(id)decodeNXObject;
-(id)decodeDataObject;
-(id)decodeObject;

/// ---

-(BOOL)allowsKeyedCoding;
-(BOOL)isReusable;

-(BOOL)containsValueForKey:(id)arg1 ;

-(id)nextGenericKey;
-(long long)uniqueIDForCurrentlyDecodingObject;

-(void)replaceObject:(id)arg1 withObject:(id)arg2 ;

-(id)initForReadingWithData:(id)arg1 ;
-(id)initForReadingWithData:(id)arg1 error:(id*)arg2 ;
-(void)finishDecoding;
-(void)dealloc;

-(void)setDelegate:(id)arg1 ;
-(id)delegate;

-(unsigned)systemVersion;
-(long long)versionForClassName:(id)arg1 ;

-(BOOL)validateAndIndexData:(id)arg1 error:(id*)arg2 ;
-(BOOL)validateAndIndexClasses:(const void*)arg1 length:(unsigned long long)arg2 ;
-(BOOL)validateAndIndexObjects:(const void*)arg1 length:(unsigned long long)arg2 ;
-(BOOL)validateAndIndexKeys:(const void*)arg1 length:(unsigned long long)arg2 ;
-(BOOL)validateAndIndexValues:(const void*)arg1 length:(unsigned long long)arg2 ;




@end
